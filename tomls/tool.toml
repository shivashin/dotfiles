[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = ''''
if argc() == 0
  let g:nerdtree_tabs_open_on_console_startup = 1
end
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\   "*" : {
\     'hook/time/enable': '1'
\   },
\ }

let g:quickrun_config._ = {'runner' : 'vimproc'}
let g:quickrun_config['rspec/bundle'] = {
  \ 'type': 'rspec/bundle',
  \ 'command': 'rspec',
  \ 'exec': 'bundle exec %c %s'
  \}
let g:quickrun_config['rspec/normal'] = {
  \ 'type': 'rspec/normal',
  \ 'command': 'rspec',
  \ 'exec': '%c %s'
  \}
function! RSpecQuickrun()
  let b:quickrun_config = {'type' : 'rspec/bundle'}
endfunction
autocmd BufReadPost *_spec.rb call RSpecQuickrun()
'''

[[plugins]]
repo = 'thinca/vim-qfhl'
hook_add = '''
let g:qfhl_startup = 'enable'
let g:qfhl#multi_loclist = 'keep'
nnoremap [q :cprevious<CR>   " 前へ
nnoremap ]q :cnext<CR>       " 次へ
nnoremap [Q :<C-u>cfirst<CR> " 最初へ
nnoremap ]Q :<C-u>clast<CR>  " 最後へ
autocmd QuickFixCmdPost *grep* cwindow
'''

[[plugins]]
repo = 'Shougo/neosnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'vim-scripts/javacomplete'
hook_add ='''
autocmd FileType java :setlocal omnifunc=javacomplete#Complete
autocmd FileType java :setlocal completefunc=javacomplete#CompleteParamsInfo
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = "aklt/plantuml-syntax"
hook_add = '''
let g:plantuml_executable_script = "~/dotfiles/plantuml"
'''

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'thoughtbot/vim-rspec'

[[plugins]]
repo = 'itmammoth/run-rspec.vim'
hook_source = '''
let g:run_rspec_bin = 'bundle exec rspec'
nnoremap <Space>r :RunSpec<CR>
nnoremap <Space>s :RunSpecLine<CR>
nnoremap <Space>l :RunSpecLastRun<CR>
nnoremap <Space>c :RunSpecCloseResult<CR>
'''

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
let g:ale_sign_column_always = 1
let g:ale_sign_error = '-E'
let g:ale_sign_warning = '-W'
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 0
let g:ale_open_list = 1
'''

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=2
let g:indent_guides_auto_colors=0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#444433 ctermbg=gray
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#333344 ctermbg=darkgray
let g:indent_guides_guide_size = 1
'''
